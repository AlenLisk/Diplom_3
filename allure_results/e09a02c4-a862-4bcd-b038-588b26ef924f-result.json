{"name": "Проверка отображения заказов в Лента заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"Account_link__2ETsJ text text_type_main-medium text_color_inactive\" href=\"/account/order-history\"> is not clickable at point (285,307) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <test_order_feed.TestOrderFeedPage object at 0x7e036f5e5c60>, login_page = <pages.login_page.LoginPage object at 0x7e036f564fa0>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"4532ac90-902c-462d-8a8d-b903c5136139\")>\npersonal_account_page = <pages.personal_account_page.PersonalAccountPage object at 0x7e036f567f40>\n\n    @allure.title('Проверка отображения заказов в Лента заказов')\n    def test_display_orders(self, login_page, driver, personal_account_page):\n        login_page.login()\n        home_page = HomePage(driver)\n        order_number = home_page.create_order_modification()\n        login_page.click_button_personal_account()\n>       personal_account_page.click_button_order_history()\n\ntests/test_order_feed.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/personal_account_page.py:12: in click_button_order_history\n    button.click()\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7e036f566e30>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <a class=\\\\\"Account_link__2...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"Account_link__2ETsJ text text_type_main-medium text_color_inactive\" href=\"/account/order-history\"> is not clickable at point (285,307) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Логин", "status": "passed", "steps": [{"name": "Ввести логин в поле ввода", "status": "passed", "start": 1719663869830, "stop": 1719663869982}, {"name": "Ввести пароль в поле ввода", "status": "passed", "start": 1719663869982, "stop": 1719663869982}, {"name": "Нажать на кнопку Войти", "status": "passed", "start": 1719663869982, "stop": 1719663870338}], "start": 1719663869830, "stop": 1719663870338}, {"name": "Созать заказ с получение номера и закрытием модального окна", "status": "passed", "steps": [{"name": "Найти заголовок Соберите бургер", "status": "passed", "start": 1719663870338, "stop": 1719663870462}, {"name": "Перетащить ингредиент", "status": "passed", "steps": [{"name": "Перетаскивание элемента", "status": "passed", "parameters": [{"name": "source_element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"4532ac90-902c-462d-8a8d-b903c5136139\", element=\"ecb78ba7-fb18-4791-8e62-5bb853009e01\")>"}, {"name": "target_element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"4532ac90-902c-462d-8a8d-b903c5136139\", element=\"a4d12405-7a99-4b17-b0e4-f715771fef1d\")>"}], "start": 1719663871042, "stop": 1719663871574}], "start": 1719663870462, "stop": 1719663871574}, {"name": "Нажать на кнопку Оформить заказ", "status": "passed", "start": 1719663871574, "stop": 1719663871846}, {"name": "Получить номер заказа", "status": "passed", "start": 1719663871846, "stop": 1719663873878}, {"name": "Закрыть модальное окно", "status": "passed", "steps": [{"name": "Ожидание скрытия элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \".//section//div/p[text()='Ваш заказ начали готовить']\")"}], "start": 1719663875210, "stop": 1719663876550}], "start": 1719663873878, "stop": 1719663876550}], "start": 1719663870338, "stop": 1719663876550}, {"name": "Нажать на кнопку Личный кабинет", "status": "passed", "start": 1719663876550, "stop": 1719663876790}, {"name": "Нажать на кнопку История заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"Account_link__2ETsJ text text_type_main-medium text_color_inactive\" href=\"/account/order-history\"> is not clickable at point (285,307) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"/home/lisk/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/lisk/Desktop/Diplom_3/pages/personal_account_page.py\", line 12, in click_button_order_history\n    button.click()\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.10/dist-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1719663876790, "stop": 1719663877014}], "attachments": [{"name": "log", "source": "28008204-ec88-4f0d-8f66-1a24ed983a9a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1719663869830, "stop": 1719663877014, "uuid": "1d693d77-7080-493b-97c7-094c96a4b2d3", "historyId": "e530b9fdb4e6a62e1656de8d59acca9b", "testCaseId": "78e103bdf52acadfedabfb596f093e11", "fullName": "tests.test_order_feed.TestOrderFeedPage#test_display_orders", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeedPage"}, {"name": "host", "value": "lisk"}, {"name": "thread", "value": "48322-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}